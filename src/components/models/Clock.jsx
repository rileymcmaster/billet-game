/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 /Users/rileymcmaster/Documents/Personal/Web/Debris/Scan/Clock/clock1_hands.glb --transform --simplify 
Files: /Users/rileymcmaster/Documents/Personal/Web/Debris/Scan/Clock/clock1_hands.glb [929.27KB] > /Users/rileymcmaster/Projects/Personal/threejs/ecctrl/clock1_hands-transformed.glb [106.66KB] (89%)
*/

import React, { forwardRef, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const Clock = (props) => {
	const group = useRef();
	const hourHand = useRef();
	const minuteHand = useRef();
	const secondHand = useRef();

	const { nodes, materials } = useGLTF("/clock1_hands_5.glb");

	useFrame(({ camera }, delta) => {
		if (group.current) {
			group.current.lookAt(camera.position.x, camera.position.y, camera.position.z);
		}
		const ratio = 0.5;
		hourHand.current.rotation.y += -delta * ratio;
		minuteHand.current.rotation.y += delta * (ratio * 10);
		secondHand.current.rotation.y += delta * (ratio * -30);
	});
	return (
		<group ref={group} {...props} dispose={null} position={[-3.5, 3, 5]} scale={1.8}>
			<mesh geometry={nodes.face.geometry} material={materials.Uhr_2} rotation={[-1.553, 0, 0]} />
			<mesh geometry={nodes.shell.geometry} material={materials.Uhr_2_Rand} rotation={[-1.553, 0, 0]} />
			<mesh geometry={nodes.glass.geometry} material={materials["Uhr_2.001"]} rotation={[-1.595, 0, -0.02]} />
			<mesh ref={hourHand} geometry={nodes.hand_hour.geometry} material={materials["min_Zeiger.002"]} rotation={[Math.PI / 2, 0, 0]} position-z={0.07} scale={0.8} />
			<mesh ref={minuteHand} geometry={nodes.hand_minute.geometry} material={materials.min_Zeiger} rotation={[-1.553, 0, 0]} />
			<mesh ref={secondHand} geometry={nodes.hand_second.geometry} material={materials.Sec_Zeiger} rotation={[Math.PI / 2, 0, 0]} position-z={0.1} scale={1} />
		</group>
	);
};

useGLTF.preload("/clock1_hands_5.glb");
export default Clock;
